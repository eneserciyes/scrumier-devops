version: '3.7'

services:
  ui:
    image: ogedik/scrumier-ui:1.0.0
    ports:
      - "3000:3000"
    restart: always
    networks:
      - scrumier-network

  api-gateway:
    image: ogedik/api-gateway:1.0.0
    ports:
      - "8090:8090"
    restart: always
    environment:
      DISCOVERY_SERVER_HOST: discovery-server
      DISCOVERY_SERVER_PORT: 8761
    networks:
      - scrumier-network

  discovery-server:
    image: ogedik/discovery-server:1.0.0
    ports:
      - "8761:8761"
    restart: always
    networks:
      - scrumier-network

  authentication:
    image: ogedik/authentication:1.0.0
    ports:
      - "8091:8091"
    restart: always
    depends_on:
      - mysql
    environment:
      DISCOVERY_SERVER_HOST: discovery-server
      DISCOVERY_SERVER_PORT: 8761
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: ogedik.112233
    networks:
      - scrumier-network

  config:
    image: ogedik/config:1.0.0
    ports:
      - "8092:8092"
    restart: always
    depends_on:
      - mysql
    environment:
      DISCOVERY_SERVER_HOST: discovery-server
      DISCOVERY_SERVER_PORT: 8761
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: ogedik.112233
    networks:
      - scrumier-network

  integration:
    image: ogedik/integration:1.0.0
    ports:
      - "8094:8094"
    restart: always
    environment:
      DISCOVERY_SERVER_HOST: discovery-server
      DISCOVERY_SERVER_PORT: 8761
    networks:
      - scrumier-network

  mysql:
    image: mysql:8
    # In case MySQL Server is running in the local environment, uses 3307 port to expose itself.
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'ogedik.112233'
      MYSQL_USER: 'mysql-user'
      MYSQL_PASSWORD: 'ogedik.112233'
      MYSQL_DATABASE: 'scrumier'
    volumes:
      - scrumier-data-volume:/var/lib/mysql
    networks:
      - scrumier-network

#Â Network to be created to facilitate communication between containers
networks:
  scrumier-network:

# Volumes
volumes:
  scrumier-data-volume: